/* ソースから候補を取得する

引数	[0] 	ohtorii_tools_dll_handle	dllへのハンドル
		[1]		hm_process_dll_handle		dllへのハンドル
		[2] 	input_source_filename		ソースファイル名
		[3] 	gather_arg					gather_candidates へ渡す引数
											（例）"args1 arg2 ..."
		...
		[30]	mode						""		候補の取得
											"reget"	候補の再取得


返値	成功	"1"
		失敗	"0"
*/

//==========================================================================
//	一時ファイル名
//==========================================================================
$g_candidate_filename="";


//==========================================================================
//メイン処理
//==========================================================================
$g_mode=getarg(30);
#g_dll_ohtorii_tools=val(getarg(0));
#g_dll_hm_process=val(getarg(1));

debuginfo "internal\\source.mac  #g_mode="+$g_mode;
call main getarg(2),getarg(3);
if(##return){
	endmacro "1";
}
endmacro "0";



//==========================================================================
//	ソースの生成処理
//==========================================================================
main:
	$$source_filename=$$1;
	$$arg=$$2;

	call LoadSourceIfNotExist $$source_filename;
	$$source_name=$$return;
	if($$source_name==""){
		return false;
	}

	/*候補を作る
	*/
	##ret		=false;
	##success	= dllfuncw(#g_dll_ohtorii_tools, "SetCurrentSourceName", $$source_name);
	if(!##success){
		return false;
	}

	if($g_mode=="reget"){
		##ret=dllfuncw(#g_dll_ohtorii_tools,"CandidatesClearWithSourceName",$$source_name);
	}

	$$candidate_type = dllfuncstrw(#g_dll_ohtorii_tools,"SourcesGetCandidateType",$$source_name);
	if($$candidate_type=="string"){
		call GatherCandidatesFromString $$source_filename, $$arg;
		##ret = ##return;
	}else if($$candidate_type=="file"){
		call GatherCandidatesFromFile $$source_filename, $$arg;
		##ret = ##return;
	}else if($$candidate_type=="async_file"){
		call GatherCandidatesFromASyncFile $$source_filename, $$arg;
		##ret = ##return;
	}else if($$candidate_type=="function"){
		call GatherCandidatesFromFunction $$source_filename, $$arg;
		##ret = ##return;
	}else{
		//未知の型名
		message sprintf("$$candidate_type が未知の型名だよ。\n"+
						"$$candidate_type=%s\n"	+
						"$$source_filename=%s\n"+
						"$$source_name=%s\n"	+
						"\n\n[todo]親切なメッセージにする", $$candidate_type,$$source_filename,$$source_name);
		##ret=false;
	}
	##success = dllfuncw(#g_dll_ohtorii_tools, "ClearCurrentSourceName");
	return ##ret;


//////////////////////////////////////////////////////////////////////////////
//	候補の取得
//////////////////////////////////////////////////////////////////////////////
GatherCandidatesFromString:
	$$source_filename=$$1;
	$$arg=$$2;

	$$args[0]="gather_candidates";
	$$args[1]=$$arg;
	$$args[29]=str(#g_dll_hm_process);
	$$args[30]=str(#g_dll_ohtorii_tools);
	execmacro $$source_filename, $$args, 31;

	##success=dllfuncw(#g_dll_ohtorii_tools, "AppendCandidateAsString", getresultex(-1));
	return ##success;


GatherCandidatesFromFile:
	$$source_filename=$$1;
	$$arg=$$2;

	$$args[0]="gather_candidates";
	$$args[1]=$$arg;
	$$args[29]=str(#g_dll_hm_process);
	$$args[30]=str(#g_dll_ohtorii_tools);

	execmacro $$source_filename, $$args, 31;
	$$filelist_name=getresultex(-1);
	if($$filelist_name==""){
		return false;
	}

	//
	//$g_file_image変数へファイル内容を読み込む
	//
	call LoadFileImage $$filelist_name;
	if(! ##return){
		return false;
	}

	//
	//$$candidate_list変数を候補に登録する
	//
	##num_candidate = split($$candidate_list,$g_file_image,"\r\n" );
	$g_file_image="";
	##i=0;
	while(##i < ##num_candidate){
		##success=dllfuncw(#g_dll_ohtorii_tools, "AppendCandidate", $$candidate_list[##i],"");
		##success=dllfuncw(#g_dll_ohtorii_tools, "SetCandidateActionFileName", $$candidate_list[##i]);

		##i = ##i + 1;
	}

	return true;


GatherCandidatesFromASyncFile:
	$$source_filename=$$1;
	$$arg=$$2;

	$$args[0]="gather_candidates";
	$$args[1]=$$arg;
	$$args[29]=str(#g_dll_hm_process);
	$$args[30]=str(#g_dll_ohtorii_tools);

	execmacro $$source_filename, $$args, 31;
	$$filelist_name=getresultex(-1);
	if($$filelist_name==""){
		return false;
	}

	##success=dllfuncw(#g_dll_ohtorii_tools, "AppendCandidateAsASyncFile", $$filelist_name);
	return ##success;


GatherCandidatesFromFunction:
	$$source_filename	=$$1;
	$$arg				=$$2;

	$$args[0]	="gather_candidates";
	$$args[1]	=$$arg;
	$$args[29]	=str(#g_dll_hm_process);
	$$args[30]	=str(#g_dll_ohtorii_tools);
	execmacro $$source_filename, $$args, 31;
	if(getresultex(-1)=="0"){
		return false;
	}
	return true;


//////////////////////////////////////////////////////////////////////////////
// ユーティリティ
//////////////////////////////////////////////////////////////////////////////
LoadSourceIfNotExist:
	$$source_filename=$$1;
	##exist	= dllfuncw(#g_dll_ohtorii_tools, "SourcesExistFileName", $$source_filename);
	if(##exist){
		$$source_name = dllfuncstrw(#g_dll_ohtorii_tools, "SourcesFileNameToSourceName", $$source_filename);
		return $$source_name;
	}
	$$args[0]="get_property";
	$$args[29]=str(#g_dll_hm_process);
	$$args[30]=str(#g_dll_ohtorii_tools);
	execmacro $$source_filename, $$args, 31;
	$$ini=getresultex(-1);
	if($$ini==""){
		return "";
	}
	$$source_name = dllfuncstrw(#g_dll_ohtorii_tools,"SourcesCreate",$$ini);

	##ret=dllfuncw(#g_dll_ohtorii_tools,"SourcesAppendFileNameAndSourceName",$$source_filename,$$source_name);
	if(!##ret){
		return false;
	}
	return $$source_name;


LoadFileImage:
	/* ファイルを変数へ読み込む

	$g_file_image　へファイル内容を読み込む
	*/
	##current_hidemaru=hidemaruhandle(0);
	openfile "/h /n " + $$1;
	if(getresultex(25)){
		return false;
	}
	##new_hidemaru=hidemaruhandle(0);
	selectall;
	$g_file_image=gettext2(seltopcolumn,seltoplineno,selendcolumn,selendlineno);
	setactivehidemaru ##current_hidemaru;
	closehidemaruforced ##new_hidemaru;;
	return true;
